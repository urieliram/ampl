#######  #######  #######  #######  #######  #######  #######   #######
#######  Programador: Uriel Iram Lezama Lope urieliram@yahoo.com   #######
#######  Posgrado en Ing Sistemas, PISIS, UANL				                           #######
#######  Modelo obtenido de Knueven 2020a 				                               #######
#######  #######  #######  #######  #######  #######  #######   #######

###########  SETS
set T ;       # Periods
set G ;      # Generation units
set L{G};   # Piecewise per generator
set S{G};   # Segments per generator start-up cost

###########  PARAMETERS
param C   { g in G, l in L[g] } >= 0; ## Cost coefficient for piecewise segment l of generator g ($/megawatt-hour (MWh).
param Pb { g in G, l in L[g] } >= 0; ## Maximum power available for piecewise segment l for generator g (MW).
param Pmax {G}; ## The maximum power output unit g 
param Pmin {G};  ## The minimum power output unit g
param mpc{G};    ##  Minimum power cost
param UT {G};      ## Number of time periods that g has to run for at least before it can be shut down.
param DT {G};      ## Number of time periods that g has to off for at least before it can be start up.
param De {T};       ## The hourly load forecast 
param R {T};         ## The spinning reserve requirements
param CR {G};      ##   
param u_0 {G};     ## Condiciones iniciales de operacion
param D {G};        ## Number of time periods that unit g is required to be off
param U {G};        ## Number of time periods that unit g is required to be on
param SU {G};      ## Maximum startup rate of unit g   
param SD {G};      ## Maximum shutdown rate of unit g
param RU {G};      ## Maximum ramp-up rate of unit g
param RD {G};      ## Maximum ramp-down rate of unit g
param p_0 {G};     ## Condiciones iniciales de generacion
param pc_0 {G};   ## Condiciones iniciales de generacion
param c {G} ;        ## Cost of producing power generation g
#param cSU {G} ;      
param NPb {G} ;   ## Número máximo de arranques en el periodo
param CLP ;       
param CRP ;       
param Cs{ g in G, s in S[g]} ;       
param Tmin{ g in G, s in S[g]} ;

###########  VARIABLES
var p {G,T}         >= 0; 	## the quantity of electricity generated by unit g at time t
var pb {G,T}       >= 0; 	## the maximun quantity of electricity enabled by unit g at time t
var pbc {G,T}     >= 0; 	## 
var pc {G,T}       >= 0; 	## 
var pl {g in G, t in T, l in L[g]}>= 0; 	## 
var cp {G,T}       >= 0; 	## production cost over Pg for generator g at time t ($),=> 0.
var cSU {G,T}     >= 0; 	## The cost of starting up unit g in period t
var cSD {G,T}     >= 0; 	## 
var snplus {T}    >= 0; 	## 
var snminus {T} >= 0; 	## 
var sn {T}           >= 0; 	## 
var sR {T}           >= 0; 	## 
var r {G,T}          >= 0; 	## 
var u {G,T}         >= 0,  binary; ## binary equals 1 if unit g is on in time period t, and 0 if it is off
var v  {G,T}         >= 0, binary; ## binary equals 1 if unit g starts up at the beginning of time period t, and 0 otherwise
var w {G,T}         >= 0, binary; ## binary equals 1 if unit g shuts down at the beginning of time period t, and 0 otherwise
var delta {g in G, T, s in S[g]} >= 0, binary; ## binary equals 1 if unit g starts in segment s in time period t, and 0 otherwise

###########  OBJECTIVE FUNCTION
minimize Z:
sum{t in T} sum{g in G}( cp[ g , t ] + cSU[ g , t ]*v[ g , t ] + mpc[ g ]*u[ g , t ] ) ;  
#sum{t in T}sum{g in G}( c[ g ] * p[ g , t ] + cU[ g ] * v[ g , t ] ) ;  
  
###########  S.T. 
## Logical eq. (2)
subject to Logical2{ g in G , t in T: t=1 } : 
u[ g , t ] - u_0[ g ]  =  v[ g , t ] - w[ g, t ] ;
subject to Logical2_1{ g in G , t in T: t>1 } : 
u[ g , t ] - u[ g , t-1 ] = v[ g , t ] - w[ g, t ] ;

## Equals of power eq. (12), (13), (14), (15), (16) y (17).
subject to pow_igual_rule12{ g in G , t in T } : 
p[ g , t ] = pc[ g , t ] + Pmin[ g ] * u[ g , t ];   
subject to pow_igual_rule13{ g in G , t in T } : 
p[ g , t ] = pc[ g , t ] + Pmin[ g ] * u[ g , t ];    
subject to pow_igual_rule14{ g in G , t in T } : 
pbc[ g , t ] = pc[ g , t ] + r[ g , t ];    
subject to pow_igual_rule15{ g in G , t in T } : 
pb[ g , t ] = p[ g , t ] + r[ g , t ];    
subject to pow_igual_rule16{ g in G , t in T } : 
p[ g , t ] <= pb[ g , t ]; 
subject to pow_igual_rule17{ g in G , t in T } : 
pc[ g , t ] <= pbc[ g , t ];

## Start-up and shutdown ramping eq. (20), (21a) y (21b). 
subject to pow_limit_rule20{ g in G , t in T : t<card(T) and UT[g]>1 }: 
pc[g,t]+r[g,t]<=(Pmax[g]-Pmin[g])*u[g,t]-(Pmax[g]-SU[g])*v[g,t]-(Pmax[g]-SD[g])*w[g,t+1];
subject to pow_limit_rule21a{ g in G , t in T :UT[g]=1 }: 
pc[g,t]+r[g,t]<=(Pmax[g]-Pmin[g])*u[g,t]-(Pmax[g]-SU[g])*v[g,t];
subject to pow_limit_rule21b{ g in G , t in T : t<card(T) and UT[g]=1 }: 
pc[g,t]+r[g,t]<=(Pmax[g]-Pmin[g])*u[g,t]-(Pmax[g]-SD[g])*w[g,t+1];	

## Limits & Ramps eq. (35), (36)
subject to up_ramp35{ g in G , t in T : t>1 }:
pc[g,t]-pc[g,t-1]<=(SU[g]-Pmin[g]-RU[g])*v[g,t]+RU[g]*u[g,t];
subject to up_ramp35_1{ g in G , t in T : t==1 }: 
pc[g,t]-pc_0[g]  <=(SU[g]-Pmin[g]-RU[g])*v[g,t]+RU[g]*u[g,t];
subject to up_ramp36{ g in G , t in T : t>1 }:
pc[g,t-1]-pc[g,t]<=(SD[g]-Pmin[g]-RD[g])*w[g,t]+RD[g]*u[g,t-1];
subject to up_ramp36_1{ g in G , t in T : t==1 }: 
pc_0[g] - pc[g,t]<=(SD[g]-Pmin[g]-RD[g])*w[g,t]+RD[g]*u_0[g];

## Demand eq. (65), (67) & reserve
subject to demand65{ t in T }: 
sum { g in G } p[ g , t ] = De[ t ];
subject to demand67{ t in T }: 
sum { g in G } pb[ g , t ] >= De[ t ] + R[ t ];
subject to reserve{ t in T }: 
sum { g in G } r[ g , t ] >= R[ t ];

## Uptime & downtime Morales-españa2013 eq.(4), (5) y (3a), (3b)
subject to Morales_uptime{ g in G , t in (UT[g]..card(T) )} : 
sum{ i in ( t-UT[g]+1)..t } v[ g , i ] <=  u[ g , t ];

subject to Morales_downtime{g in G, t in (DT[g]..card(T) )} : 
sum{ i in ( t-DT[g]+1)..t } w[ g , i ]  <= 1 - u[ g , t ] ;

subject to Morales_uptime3a{ g in G } : 
sum{ i in 1..min(U[g],card(T)) } u[ g , i ] = min(U[g],card(T));

subject to Morales_uptime3b{ g in G } : 
sum{ i in 1..min(D[g],card(T)) } u[ g , i ] = 0;

## Max startup in the period T
#subject to Max_startup{ g in G } : 
#sum{ t in T } v[ g , t ] <= NPb[ g ];

## Piecewise cost
subject to Piecewise_offer42{ g in G, t in T, l in L[g]: l>1} :  
pl[g,t,l] <= ( Pb[g,l]-Pb[g,l-1] ) * u[g,t];

subject to Piecewise_offer43{ g in G, t in T } : 
sum{ l in L[g]} pl[g,t,l] = pc[g,t]; #pc[g,t]

subject to Piecewise_offer44{ g in G, t in T } : 
sum{ l in L[g]} C[g,l] * pl[g,t,l] = cp[g,t]; 

#Start-up cost Morales-españa2013b
subject to Start_up_cost54{ g in G, t in T, s in S[g]: s<card(S[g]) and t>=Tmin[g,s+1]} :  
delta[g,t,s] <= sum{ i in Tmin[g,s]..(Tmin[g,s+1]-1) }  w[g,t-i];

subject to Start_up_cost57{ g in G, t in T} :  
v[g,t] >= sum{ s in 1..(card(S[g])-1) }  delta[g,t,s];

subject to Start_up_cost58{ g in G, t in T} :  
cSU[g,t] = Cs[g,card(S[g])] * v[g,t] - sum{ s in 1..(card(S[g])-1) } ( Cs[g,card(S[g])] - Cs[g,s] ) * delta[g,t,s];























